# syntax = docker/dockerfile:1.2

# ────────────────────────────────────────
# Base image: Python + system deps + Nginx + NVM + wkhtmltopdf
# ────────────────────────────────────────
ARG PYTHON_VERSION=3.10.13
ARG DEBIAN_BASE=bookworm
FROM python:${PYTHON_VERSION}-slim-${DEBIAN_BASE} AS base

COPY resources/nginx-template.conf /templates/nginx/frappe.conf.template
COPY resources/nginx-entrypoint.sh /usr/local/bin/nginx-entrypoint.sh

ARG WKHTMLTOPDF_VERSION=0.12.6.1-3
ARG WKHTMLTOPDF_DISTRO=bookworm
ARG NODE_VERSION=20.18.0

ENV NVM_DIR=/home/frappe/.nvm
ENV PATH=${NVM_DIR}/versions/node/v${NODE_VERSION}/bin/:${PATH}

RUN useradd -ms /bin/bash frappe \
    && apt-get update \
    && apt-get install --no-install-recommends -y \
       wget curl git vim nginx gettext-base file \
       libpango-1.0-0 libharfbuzz0b libpangoft2-1.0-0 libpangocairo-1.0-0 \
       restic gpg mariadb-client less \
       libpq-dev postgresql-client \
       wait-for-it jq \
    && mkdir -p ${NVM_DIR} \
    && curl -sL https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash \
    && . ${NVM_DIR}/nvm.sh \
    && nvm install ${NODE_VERSION} \
    && nvm use v${NODE_VERSION} \
    && npm install -g yarn \
    && nvm alias default v${NODE_VERSION} \
    && rm -rf ${NVM_DIR}/.cache \
    && echo 'export NVM_DIR="/home/frappe/.nvm"' >> /home/frappe/.bashrc \
    && echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> /home/frappe/.bashrc \
    && echo '[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"' >> /home/frappe/.bashrc \
    # wkhtmltopdf
    && if [ "$(uname -m)" = "aarch64" ]; then export ARCH=arm64; else export ARCH=amd64; fi \
    && wget -q https://github.com/wkhtmltopdf/packaging/releases/download/${WKHTMLTOPDF_VERSION}/wkhtmltox_${WKHTMLTOPDF_VERSION}.${WKHTMLTOPDF_DISTRO}_${ARCH}.deb \
    && apt-get install -y ./wkhtmltox_${WKHTMLTOPDF_VERSION}.${WKHTMLTOPDF_DISTRO}_${ARCH}.deb \
    && rm wkhtmltox_${WKHTMLTOPDF_VERSION}.${WKHTMLTOPDF_DISTRO}_${ARCH}.deb \
    # cleanup + bench CLI
    && rm -rf /var/lib/apt/lists/* \
    && rm -f /etc/nginx/sites-enabled/default \
    && pip3 install frappe-bench \
    && sed -i '/user www-data/d' /etc/nginx/nginx.conf \
    && ln -sf /dev/stdout /var/log/nginx/access.log \
    && ln -sf /dev/stderr /var/log/nginx/error.log \
    && touch /run/nginx.pid \
    && chown -R frappe:frappe /etc/nginx/conf.d /etc/nginx/nginx.conf /var/log/nginx /var/lib/nginx /run/nginx.pid \
    && chmod 755 /usr/local/bin/nginx-entrypoint.sh \
    && chmod 644 /templates/nginx/frappe.conf.template

# ────────────────────────────────────────
# Builder stage: bench init, get-app, new-site, install-app
# ────────────────────────────────────────
FROM base AS builder

COPY overrides/apps.json /opt/frappe/apps.json

# system deps for building Python and assets
RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \
       wget libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev \
       libpq-dev libffi-dev liblcms2-dev libldap2-dev libmariadb-dev libsasl2-dev \
       libtiff5-dev libwebp-dev pkg-config redis-tools rlwrap tk8.6-dev cron \
       gcc build-essential libbz2-dev \
    && rm -rf /var/lib/apt/lists/*

USER frappe

# Core build args
ARG FRAPPE_BRANCH=version-15-development
ARG FRAPPE_PATH=https://github.com/FxGroup/frappe.git

# 1) Initialize bench with your Frappe fork
RUN bench init \
      --frappe-branch=${FRAPPE_BRANCH} \
      --frappe-path=${FRAPPE_PATH} \
      --no-procfile \
      --no-backups \
      --skip-redis-config-generation \
      --verbose \
      /home/frappe/frappe-bench

COPY overrides/common_site_config.json /home/frappe/frappe-bench/sites/common_site_config.json

# 2) Clone ERPNext and your custom apps
RUN cd /home/frappe/frappe-bench && \
    bench get-app erpnext   https://github.com/FxGroup/erpnext.git   --branch version-15-development && \
    bench get-app lms       https://github.com/frappe/lms.git        --branch develop

ARG GITHUB_TOKEN
RUN cd /home/frappe/frappe-bench && \
    bench get-app hrms      https://${GITHUB_TOKEN}@github.com/FxGroup/hrms.git      --branch version-15-development && \ 
    bench get-app FxNmRnTh  https://${GITHUB_TOKEN}@github.com/FxGroup/FxNmRnTh.git  --branch develop-v15 && \
    bench get-app Australia https://${GITHUB_TOKEN}@github.com/FxGroup/Australia.git --branch develop-v15 && \
    bench get-app NewZealand https://${GITHUB_TOKEN}@github.com/FxGroup/NewZealand.git --branch develop-v15 && \
    bench get-app FX        https://${GITHUB_TOKEN}@github.com/FxGroup/FX.git        --branch develop-v15 && \
    bench get-app RN        https://${GITHUB_TOKEN}@github.com/FxGroup/RN.git        --branch develop-v15 && \
    bench get-app NM        https://${GITHUB_TOKEN}@github.com/FxGroup/NM.git        --branch develop-v15 && \
    bench get-app Th        https://${GITHUB_TOKEN}@github.com/FxGroup/Th.git        --branch develop-v15


# 3) Remove Git metadata to slim down the image
RUN cd /home/frappe/frappe-bench && \
    find apps -mindepth 1 -path "*/.git" | xargs rm -rf

# ────────────────────────────────────────
# Final runtime image
# ────────────────────────────────────────
FROM base AS backend

USER frappe

COPY --from=builder --chown=frappe:frappe /home/frappe/frappe-bench /home/frappe/frappe-bench

WORKDIR /home/frappe/frappe-bench

VOLUME ["/home/frappe/frappe-bench/sites","/home/frappe/frappe-bench/sites/assets","/home/frappe/frappe-bench/logs"]

CMD [ \
  "/home/frappe/frappe-bench/env/bin/gunicorn", \
  "--chdir=/home/frappe/frappe-bench/sites", \
  "--bind=0.0.0.0:8000", \
  "--threads=4", \
  "--workers=2", \
  "--worker-class=gthread", \
  "--worker-tmp-dir=/dev/shm", \
  "--timeout=120", \
  "--preload", \
  "frappe.app:application" \
]
